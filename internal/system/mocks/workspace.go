// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewWorkspace creates a new instance of Workspace. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorkspace(t interface {
	mock.TestingT
	Cleanup(func())
}) *Workspace {
	mock := &Workspace{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Workspace is an autogenerated mock type for the Workspace type
type Workspace struct {
	mock.Mock
}

type Workspace_Expecter struct {
	mock *mock.Mock
}

func (_m *Workspace) EXPECT() *Workspace_Expecter {
	return &Workspace_Expecter{mock: &_m.Mock}
}

// GetGoBinPath provides a mock function for the type Workspace
func (_mock *Workspace) GetGoBinPath() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetGoBinPath")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// Workspace_GetGoBinPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGoBinPath'
type Workspace_GetGoBinPath_Call struct {
	*mock.Call
}

// GetGoBinPath is a helper method to define mock.On call
func (_e *Workspace_Expecter) GetGoBinPath() *Workspace_GetGoBinPath_Call {
	return &Workspace_GetGoBinPath_Call{Call: _e.mock.On("GetGoBinPath")}
}

func (_c *Workspace_GetGoBinPath_Call) Run(run func()) *Workspace_GetGoBinPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Workspace_GetGoBinPath_Call) Return(s string) *Workspace_GetGoBinPath_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *Workspace_GetGoBinPath_Call) RunAndReturn(run func() string) *Workspace_GetGoBinPath_Call {
	_c.Call.Return(run)
	return _c
}

// GetInternalBasePath provides a mock function for the type Workspace
func (_mock *Workspace) GetInternalBasePath() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetInternalBasePath")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// Workspace_GetInternalBasePath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetInternalBasePath'
type Workspace_GetInternalBasePath_Call struct {
	*mock.Call
}

// GetInternalBasePath is a helper method to define mock.On call
func (_e *Workspace_Expecter) GetInternalBasePath() *Workspace_GetInternalBasePath_Call {
	return &Workspace_GetInternalBasePath_Call{Call: _e.mock.On("GetInternalBasePath")}
}

func (_c *Workspace_GetInternalBasePath_Call) Run(run func()) *Workspace_GetInternalBasePath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Workspace_GetInternalBasePath_Call) Return(s string) *Workspace_GetInternalBasePath_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *Workspace_GetInternalBasePath_Call) RunAndReturn(run func() string) *Workspace_GetInternalBasePath_Call {
	_c.Call.Return(run)
	return _c
}

// GetInternalBinPath provides a mock function for the type Workspace
func (_mock *Workspace) GetInternalBinPath() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetInternalBinPath")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// Workspace_GetInternalBinPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetInternalBinPath'
type Workspace_GetInternalBinPath_Call struct {
	*mock.Call
}

// GetInternalBinPath is a helper method to define mock.On call
func (_e *Workspace_Expecter) GetInternalBinPath() *Workspace_GetInternalBinPath_Call {
	return &Workspace_GetInternalBinPath_Call{Call: _e.mock.On("GetInternalBinPath")}
}

func (_c *Workspace_GetInternalBinPath_Call) Run(run func()) *Workspace_GetInternalBinPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Workspace_GetInternalBinPath_Call) Return(s string) *Workspace_GetInternalBinPath_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *Workspace_GetInternalBinPath_Call) RunAndReturn(run func() string) *Workspace_GetInternalBinPath_Call {
	_c.Call.Return(run)
	return _c
}

// GetInternalTempPath provides a mock function for the type Workspace
func (_mock *Workspace) GetInternalTempPath() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetInternalTempPath")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// Workspace_GetInternalTempPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetInternalTempPath'
type Workspace_GetInternalTempPath_Call struct {
	*mock.Call
}

// GetInternalTempPath is a helper method to define mock.On call
func (_e *Workspace_Expecter) GetInternalTempPath() *Workspace_GetInternalTempPath_Call {
	return &Workspace_GetInternalTempPath_Call{Call: _e.mock.On("GetInternalTempPath")}
}

func (_c *Workspace_GetInternalTempPath_Call) Run(run func()) *Workspace_GetInternalTempPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Workspace_GetInternalTempPath_Call) Return(s string) *Workspace_GetInternalTempPath_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *Workspace_GetInternalTempPath_Call) RunAndReturn(run func() string) *Workspace_GetInternalTempPath_Call {
	_c.Call.Return(run)
	return _c
}

// Initialize provides a mock function for the type Workspace
func (_mock *Workspace) Initialize() error {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Initialize")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func() error); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// Workspace_Initialize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Initialize'
type Workspace_Initialize_Call struct {
	*mock.Call
}

// Initialize is a helper method to define mock.On call
func (_e *Workspace_Expecter) Initialize() *Workspace_Initialize_Call {
	return &Workspace_Initialize_Call{Call: _e.mock.On("Initialize")}
}

func (_c *Workspace_Initialize_Call) Run(run func()) *Workspace_Initialize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Workspace_Initialize_Call) Return(err error) *Workspace_Initialize_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *Workspace_Initialize_Call) RunAndReturn(run func() error) *Workspace_Initialize_Call {
	_c.Call.Return(run)
	return _c
}
